{
  "openapi": "3.1.0",
  "x-stoplight": {
    "id": "ecmljbtj13mw6"
  },
  "info": {
    "title": "Shopping MS API",
    "version": "1.0",
    "description": "",
    "contact": {
      "name": "ekoulemaneng",
      "url": "bekomstudio.com",
      "email": "ekoulemaneng@bekomstudio.com"
    }
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000/apis/v1",
      "description": ""
    }
  ],
  "paths": {
    "/products": {
      "post": {
        "summary": "Add a new product",
        "tags": [
          "Products"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/Product"
          },
          "400": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "404": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "operationId": "addProduct",
        "requestBody": {
          "$ref": "#/components/requestBodies/AddProduct"
        },
        "parameters": []
      },
      "get": {
        "summary": "Retrieve products",
        "operationId": "getProducts",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Products"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/productName"
          },
          {
            "$ref": "#/components/parameters/productDescription"
          },
          {
            "$ref": "#/components/parameters/productCategory"
          },
          {
            "$ref": "#/components/parameters/productBrand"
          },
          {
            "$ref": "#/components/parameters/productMinQuantity"
          },
          {
            "$ref": "#/components/parameters/productMaxQuantity"
          },
          {
            "$ref": "#/components/parameters/productMinPrice"
          },
          {
            "$ref": "#/components/parameters/productMaxPrice"
          },
          {
            "$ref": "#/components/parameters/productMinDate"
          },
          {
            "$ref": "#/components/parameters/productMaxDate"
          }
        ]
      }
    },
    "/products/{productId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/productId"
        }
      ],
      "get": {
        "summary": "Get a product",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Product"
          },
          "400": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "404": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "operationId": "getProductById"
      },
      "patch": {
        "summary": "Update a product",
        "operationId": "updateProduct",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Product"
          },
          "400": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "404": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "tags": [
          "Products"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateProduct"
        }
      },
      "delete": {
        "summary": "Delete a product",
        "operationId": "delateProduct",
        "responses": {
          "200": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "400": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "404": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/brands": {
      "post": {
        "summary": "Add a new brand",
        "responses": {
          "201": {
            "$ref": "#/components/responses/Brand"
          },
          "400": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "404": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "operationId": "addBrand",
        "requestBody": {
          "$ref": "#/components/requestBodies/AddBrand"
        },
        "tags": [
          "Brands"
        ]
      },
      "get": {
        "summary": "Retrieve brands",
        "operationId": "getBrands",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Brands"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/brandName"
          },
          {
            "$ref": "#/components/parameters/brandDescription"
          }
        ],
        "tags": [
          "Brands"
        ]
      },
      "parameters": []
    },
    "/brands/{brandId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/brandId"
        }
      ],
      "get": {
        "summary": "Get a brand",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Brand"
          },
          "400": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "404": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "operationId": "getBrandById",
        "tags": [
          "Brands"
        ]
      },
      "patch": {
        "summary": "Update a brand",
        "operationId": "updateBrand",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Brand"
          },
          "400": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "404": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateBrand"
        },
        "tags": [
          "Brands"
        ]
      },
      "delete": {
        "summary": "Delete a brand",
        "operationId": "deleteBrand",
        "responses": {
          "200": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "400": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "404": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "tags": [
          "Brands"
        ]
      }
    },
    "/categories": {
      "post": {
        "summary": "Add a new category",
        "responses": {
          "201": {
            "$ref": "#/components/responses/Category"
          },
          "400": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "404": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "operationId": "addCategory",
        "requestBody": {
          "$ref": "#/components/requestBodies/AddCategory"
        },
        "tags": [
          "Categories"
        ]
      },
      "get": {
        "summary": "Retrieve categories",
        "operationId": "getCategories",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Categories"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/categoryName"
          },
          {
            "$ref": "#/components/parameters/categoryDescription"
          }
        ],
        "tags": [
          "Categories"
        ]
      },
      "parameters": []
    },
    "/categories/{categoryId}": {
      "parameters": [
        {
          "name": "categoryId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "^[a-f\\d]{24}$"
          },
          "description": "Id of category"
        }
      ],
      "get": {
        "summary": "Get a category",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Category"
          },
          "400": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "404": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "operationId": "getCategoryById",
        "tags": [
          "Categories"
        ]
      },
      "patch": {
        "summary": "Update a category",
        "operationId": "updateCategory",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Category"
          },
          "400": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "404": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateCategory"
        },
        "tags": [
          "Categories"
        ]
      },
      "delete": {
        "summary": "Delete a category",
        "operationId": "deleteCategory",
        "responses": {
          "200": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "400": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "404": {
            "$ref": "#/components/responses/StandardResponse"
          },
          "500": {
            "$ref": "#/components/responses/StandardResponse"
          }
        },
        "tags": [
          "Categories"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-f\\d]{24}$"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "object",
            "required": [
              "id",
              "name",
              "description"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[a-f\\d]{24}$"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "brand": {
            "type": "object",
            "required": [
              "id",
              "name",
              "description"
            ],
            "properties": {
              "id": {
                "type": "string",
                "pattern": "^[a-f\\d]{24}$"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "quantity": {
            "type": "integer"
          },
          "price": {
            "type": "number"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "id",
          "name",
          "category",
          "brand",
          "quantity",
          "price",
          "date",
          "url"
        ]
      },
      "Brand": {
        "type": "object",
        "x-stoplight": {
          "id": "90dd2c72d7386"
        },
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-f\\d]{24}$"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "id",
          "name",
          "url"
        ]
      },
      "Category": {
        "type": "object",
        "x-stoplight": {
          "id": "aa9da2dd6c25e"
        },
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-f\\d]{24}$"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "id",
          "name",
          "url"
        ]
      }
    },
    "requestBodies": {
      "AddProduct": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of product"
                },
                "description": {
                  "type": "string",
                  "description": "Description of product"
                },
                "category": {
                  "type": "string",
                  "pattern": "^[a-f\\d]{24}$",
                  "description": "Category id of product"
                },
                "brand": {
                  "type": "string",
                  "pattern": "^[a-f\\d]{24}$",
                  "description": "Brand id of product"
                },
                "quantity": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 0,
                  "description": "Quantity of product"
                },
                "price": {
                  "type": "number",
                  "minimum": 0,
                  "default": 0,
                  "description": "Price of product"
                }
              },
              "required": [
                "name",
                "category",
                "brand",
                "quantity",
                "price"
              ]
            }
          }
        }
      },
      "UpdateProduct": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "category": {
                  "type": "string",
                  "pattern": "^[a-f\\d]{24}$"
                },
                "brand": {
                  "type": "string",
                  "pattern": "^[a-f\\d]{24}$"
                },
                "quantity": {
                  "type": "integer",
                  "minimum": 0
                },
                "price": {
                  "type": "number",
                  "minimum": 0
                }
              }
            }
          }
        }
      },
      "AddBrand": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "name": "jjj",
                  "description": "jjj",
                  "category": "jjj",
                  "brand": "jjj",
                  "quantity": 45,
                  "price": 45.23
                }
              },
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of category"
                },
                "description": {
                  "type": "string",
                  "description": "Description of category"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        }
      },
      "UpdateBrand": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "AddCategory": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "name": "jjj",
                  "description": "jjj",
                  "category": "jjj",
                  "brand": "jjj",
                  "quantity": 45,
                  "price": 45.23
                }
              },
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of category"
                },
                "description": {
                  "type": "string",
                  "description": "Description of category"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        }
      },
      "UpdateCategory": {
        "content": {
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "Products": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "items": [],
                  "count": 12
                }
              },
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                },
                "count": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "headers": {}
      },
      "Product": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "Brands": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "items": [],
                  "count": 12
                }
              },
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Brand"
                  }
                },
                "count": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "headers": {}
      },
      "Brand": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Brand"
            }
          }
        }
      },
      "Categories": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "items": [],
                  "count": 12
                }
              },
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                },
                "count": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "headers": {}
      },
      "Category": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Category"
            }
          }
        }
      },
      "StandardResponse": {
        "description": "Example response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "code": "NameNotProvided",
                  "message": "The name has not been provided."
                }
              },
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "message"
              ]
            }
          }
        }
      }
    },
    "parameters": {
      "productId": {
        "name": "productId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[a-f\\d]{24}$"
        },
        "description": "Id of product"
      },
      "productName": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "name",
        "description": "Name of product"
      },
      "productDescription": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "description",
        "description": "Description of product"
      },
      "productCategory": {
        "schema": {
          "type": "string",
          "pattern": "^[a-f\\d]{24}$"
        },
        "in": "query",
        "name": "category",
        "description": "Category id of product"
      },
      "productBrand": {
        "schema": {
          "type": "string",
          "pattern": "^[a-f\\d]{24}$"
        },
        "in": "query",
        "name": "brand",
        "description": "Brand id of products"
      },
      "productMinQuantity": {
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "in": "query",
        "name": "min_quantity",
        "description": "Minimum quantity of products",
        "required": true
      },
      "productMaxQuantity": {
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "in": "query",
        "name": "max_quantity",
        "description": "Maximum quantity of products",
        "required": true
      },
      "productMinPrice": {
        "schema": {
          "type": "number",
          "minimum": 0
        },
        "in": "query",
        "name": "min_price",
        "description": "Minimum price of products",
        "required": true
      },
      "productMaxPrice": {
        "schema": {
          "type": "number",
          "minimum": 0
        },
        "in": "query",
        "name": "max_price",
        "description": "Maximum price of products",
        "required": true
      },
      "productMinDate": {
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "in": "query",
        "name": "min_date",
        "description": "Minimum date of products data modifications"
      },
      "productMaxDate": {
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "in": "query",
        "name": "max_date",
        "description": "Maximum date of products data modifications"
      },
      "brandId": {
        "name": "brandId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[a-f\\d]{24}$"
        },
        "description": "Id of brand"
      },
      "brandName": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "name",
        "description": "Name of brands"
      },
      "brandDescription": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "description",
        "description": "Description of brands"
      },
      "categoryId": {
        "name": "categoryId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[a-f\\d]{24}$"
        },
        "description": "Id of category"
      },
      "categoryName": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "name",
        "description": "Name of categories"
      },
      "categoryDescription": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "description",
        "description": "Description of category"
      }
    }
  },
  "tags": [
    {
      "name": "Products"
    },
    {
      "name": "Brands"
    },
    {
      "name": "Categories"
    }
  ]
}